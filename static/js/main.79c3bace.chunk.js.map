{"version":3,"sources":["components/gameBody/Game.tsx","components/colors/COLORS.tsx","components/button/Button.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/gameBody/Game.module.scss","App.module.scss","components/button/Button.module.scss"],"names":["Game","textToDisplay","colorToDisplay","gameLength","count","className","styles","gameWrapper","instructions","instructionHeader","instructionContent","red","button","green","blue","yellow","pointCount","color","style","COLORS","Button","buttonClickHandler","label","buttonExit","onClick","toast","configure","App","useState","setColorToDisplay","setTextToDisplay","tick","setTick","key","setKey","setCount","isGameActive","setIsGameActive","setGameLength","randomColorNumber","Math","floor","random","length","randomTextNumber","useEffect","document","title","window","addEventListener","e","gameProgress","colorFirstChar","error","position","POSITION","TOP_CENTER","delay","autoClose","countPoints","setTimeout","container","header","gameBody","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.79c3bace.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport styles from './Game.module.scss';\n\ninterface Props {\n  gameLength: number;\n  count: number;\n  colorToDisplay: string;\n  textToDisplay: string;\n}\n\nconst Game: FC<Props> = ({\n  textToDisplay,\n  colorToDisplay,\n  gameLength,\n  count,\n}) => {\n  return (\n    <div className={styles.gameWrapper}>\n      <div className={styles.instructions}>\n        {gameLength === 11 ? (\n          <>\n            <span className={styles.instructionHeader}>Noteikumi</span>\n            <div className={styles.instructionContent}>\n              <span className={styles.red}>Green</span> spied pogu{' '}\n              <span className={styles.button}>R</span> jo tinte ir sarkana\n            </div>\n            <div className={styles.instructionContent}>\n              <span className={styles.green}>Yellow</span> spied pogu{' '}\n              <span className={styles.button}>G</span> jo tinte ir zaļa\n            </div>\n            <div className={styles.instructionContent}>\n              <span className={styles.blue}>Blue</span> spied pogu{' '}\n              <span className={styles.button}>B</span> jo tinte ir zila\n            </div>\n            <div className={styles.instructionContent}>\n              <span className={styles.yellow}>Red</span> spied pogu{' '}\n              <span className={styles.button}>Y</span> jo tinte ir dzeltena\n            </div>\n          </>\n        ) : (\n          `Tev ir atlikuši ${gameLength} piegājieni!`\n        )}\n      </div>\n      {gameLength !== 11 && (\n        <div className={styles.pointCount}>\n          Tavs punktu skaits ir <span>{count}/10</span>\n        </div>\n      )}\n      <h1 className={styles.color} style={{ color: colorToDisplay }}>\n        {gameLength > 0 && textToDisplay}\n      </h1>\n    </div>\n  );\n};\nexport default Game;\n","type ColorsType = string[];\n\nexport const COLORS: ColorsType = [\n  'red',\n  'green',\n  'blue',\n  'yellow',\n  'black',\n];\n","import React, { FC } from 'react';\nimport styles from './Button.module.scss';\n\ninterface Props {\n  label: string;\n  buttonClickHandler: () => void;\n}\nconst Button: FC<Props> = ({ buttonClickHandler, label }) => {\n  return (\n    <div  className={label=== 'Iziet' ? styles.buttonExit : styles.button} onClick={buttonClickHandler}>\n      {label}\n    </div>\n  );\n};\n\nexport default Button;\n","import React, { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport Game from './components/gameBody/Game';\nimport { COLORS } from './components/colors/COLORS';\nimport styles from './App.module.scss';\nimport 'react-toastify/scss/main.scss';\nimport Button from './components/button/Button';\n\n\ntoast.configure();\n\nconst App = () => {\n  const [colorToDisplay, setColorToDisplay] = useState<string>('');\n  const [textToDisplay, setTextToDisplay] = useState<string>('');\n  const [tick, setTick] = useState(false);\n  const [key, setKey] = useState<string>('');\n  const [count, setCount] = useState(0);\n  const [isGameActive, setIsGameActive] = useState(false);\n  const [gameLength, setGameLength] = useState(11);\n  const randomColorNumber = Math.floor(Math.random() * COLORS.length);\n  const randomTextNumber = Math.floor(Math.random() * COLORS.length);\n\n  useEffect(() => {\n    document.title = 'Krāsu Spēle';\n  }, []);\n\n\n  // listens and records keypress\n  useEffect(() => {\n    window.addEventListener('keydown', (e: KeyboardEvent) => {\n      setKey(e.key);\n    });\n  }, []);\n\n\n\n  // listens for tick (ticking every 2 seconds)\n  useEffect(() => {\n    gameProgress();\n  }, [tick, isGameActive]);\n\n  const startGame = () => {\n    setIsGameActive(!isGameActive);\n  };\n\n  const resetGame = () => {\n    setTick(!tick);\n    setGameLength(11);\n    setCount(0);\n    setIsGameActive(true);\n    setTextToDisplay('');\n  };\n\n  const countPoints = () => {\n    const colorFirstChar = colorToDisplay![0];\n    if (key === colorFirstChar) {\n      setCount(count + 1);\n    } else if (key !== colorFirstChar && gameLength !== 11) {\n      toast.error('Krāsa nav pareiza!', {\n        position: toast.POSITION.TOP_CENTER,\n        delay: 100,\n        autoClose: 1000,\n      });\n    }\n  };\n\n  const endGame = () => {\n    setTick(!tick);\n    setGameLength(11);\n    setCount(0);\n    setIsGameActive(false);\n    setTextToDisplay('');\n  };\n\n  const gameProgress = () => {\n    if (gameLength > 0 && isGameActive) {\n      countPoints();\n      setGameLength(gameLength - 1);\n      setKey('');\n      setColorToDisplay(COLORS[randomColorNumber]);\n      setTextToDisplay(COLORS[randomTextNumber]);\n\n      setTimeout(() => {\n        setTick(!tick);\n      }, 2000);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.header} >Krāsu Spēle</h1>\n      <div className={styles.gameBody}>\n        <Game\n          count={count}\n          textToDisplay={textToDisplay}\n          colorToDisplay={colorToDisplay}\n          gameLength={gameLength}\n        />\n        {isGameActive ? (\n          <>\n            <Button buttonClickHandler={endGame} label=\"Iziet\" />\n            <Button buttonClickHandler={resetGame} label=\"Mēģināt vēlreiz\" />\n          </>\n        ) : (\n          <Button buttonClickHandler={startGame} label='Sākt' />\n        )}\n      </div>\n    </div>\n  );\n};\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameWrapper\":\"Game_gameWrapper__1uBAR\",\"instructions\":\"Game_instructions__3eJwG\",\"instructionContent\":\"Game_instructionContent__3qjqI\",\"color\":\"Game_color__2H5DB\",\"pointCount\":\"Game_pointCount__1tP6k\",\"red\":\"Game_red__3EQkI\",\"blue\":\"Game_blue__2K4m6\",\"green\":\"Game_green__1OkgN\",\"yellow\":\"Game_yellow__2ZaR5\",\"button\":\"Game_button__9eUom\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__2L3DO\",\"container\":\"App_container__eSJ6i\",\"gameBody\":\"App_gameBody__xlTRX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__Nfhxt\",\"buttonExit\":\"Button_buttonExit__al_Ax\"};"],"sourceRoot":""}