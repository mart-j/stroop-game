{"version":3,"sources":["components/gameBody/Game.tsx","components/colors/COLORS.tsx","components/button/Button.tsx","components/audio/KEYPRESS.tsx","components/audio/ERROR.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/gameBody/Game.module.scss","App.module.scss","components/button/Button.module.scss"],"names":["Game","textToDisplay","colorToDisplay","gameLength","count","className","styles","gameWrapper","instructions","instructionHeader","luck","instructionContent","red","button","green","pink","black","pointCount","color","style","COLORS","text","Button","buttonClickHandler","label","buttonExit","onClick","KEYPRESS","Audio","ERROR","toast","configure","App","useState","setColorToDisplay","setTextToDisplay","tick","setTick","key","setKey","setCount","isGameActive","setIsGameActive","setGameLength","randomColorNumber","Math","floor","random","length","randomTextNumber","speed","useEffect","document","title","window","addEventListener","e","play","s","z","r","m","d","gameProgress","colorFirstChar","error","position","POSITION","TOP_CENTER","delay","autoClose","countPoints","setTimeout","container","header","gameBody","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6397c7d6.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport styles from './Game.module.scss';\n\ninterface Props {\n  gameLength: number;\n  count: number;\n  colorToDisplay: string;\n  textToDisplay: string;\n}\n\nconst Game: FC<Props> = ({\n  textToDisplay,\n  colorToDisplay,\n  gameLength,\n  count,\n}) => {\n  return (\n    <div className={styles.gameWrapper}>\n      <div className={styles.instructions}>\n        {gameLength === 11 ? (\n          <>\n            <span className={styles.instructionHeader}>Spƒìles apraksts</span>\n            <div className={styles.instructions}>\n              <p>\n                Spƒìles laukuƒÅ 10 reizes ik pƒìc 2 sekundƒìm parƒÅdƒÅs jauns vƒÅrds\n              </p>\n              <p>\n                Jums noteiktajƒÅ laikƒÅ jƒÅnospie≈æ atbilsto≈°u tausti≈Üu teksta\n                krƒÅsas pirmajam burtam (angƒºu valodƒÅ).\n              </p>\n              <div className={styles.luck}>Lai veicas ü§ò</div>\n            </div>\n            <div className={styles.instructionContent}>\n              <span className={styles.red}>Zils</span> spied pogu\n              <span className={styles.button}>S</span> jo tinte ir sarkana\n            </div>\n            <div className={styles.instructionContent}>\n              <span className={styles.green}>Sarkans</span> spied pogu\n              <span className={styles.button}>Z</span> jo tinte ir zaƒºa\n            </div>\n            <div className={styles.instructionContent}>\n              <span className={styles.pink}>Dzeltens</span> spied pogu\n              <span className={styles.button}>R</span> jo tinte ir rozƒÅ\n            </div>\n            <div className={styles.instructionContent}>\n              <span className={styles.black}>RozƒÅ</span> spied pogu\n              <span className={styles.button}>M</span> jo tinte ir melna\n            </div>\n          </>\n        ) : (\n          `Tev ir atliku≈°i ${gameLength} piegƒÅjieni!`\n        )}\n      </div>\n      {gameLength !== 11 && (\n        <div className={styles.pointCount}>\n          Tavs punktu skaits ir <span>{count}/10</span>\n        </div>\n      )}\n      <h1 className={styles.color} style={{ color: colorToDisplay }}>\n        {gameLength > 0 && textToDisplay}\n      </h1>\n    </div>\n  );\n};\nexport default Game;\n","// type ColorsType = string[];\n\ntype ColorsTypeNew = { color: string; text: string }[];\n\n// export const COLORS: ColorsType = ['red', 'green', 'blue', 'yellow'];\n\nexport const COLORS: ColorsTypeNew = [\n  { color: 'red', text: 'sarkans' },\n  { color: 'pink', text: 'rozƒÅ' },\n  { color: 'yellow', text: 'dzeltens' },\n  { color: 'black', text: 'melns' },\n  \n];\n","import React, { FC } from 'react';\nimport styles from './Button.module.scss';\n\ninterface Props {\n  label: string;\n  buttonClickHandler: () => void;\n}\nconst Button: FC<Props> = ({ buttonClickHandler, label }) => {\n  return (\n    <div  className={label=== 'Iziet' ? styles.buttonExit : styles.button} onClick={buttonClickHandler}>\n      {label}\n    </div>\n  );\n};\n\nexport default Button;\n","export const KEYPRESS = new Audio(\n  'https://docs.google.com/uc?export=download&id=1gfuH9GOClqnvHfCjzOhhV8hrKxCetFo3',\n);\n","export const ERROR = new Audio('https://docs.agoogle.com/uc?export=download&id=11Ja2nOcaqkSQBw7eYNU6_SIoRBtBIFcL');\n","import React, { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport Game from './components/gameBody/Game';\nimport { COLORS } from './components/colors/COLORS';\nimport styles from './App.module.scss';\nimport 'react-toastify/scss/main.scss';\nimport Button from './components/button/Button';\nimport { KEYPRESS } from './components/audio/KEYPRESS';\nimport { ERROR } from './components/audio/ERROR';\n\ntoast.configure();\n\nconst App = () => {\n  const [colorToDisplay, setColorToDisplay] = useState<string>('');\n  const [textToDisplay, setTextToDisplay] = useState<string>('');\n  const [tick, setTick] = useState(false);\n  const [key, setKey] = useState<string>('');\n  const [count, setCount] = useState(0);\n  const [isGameActive, setIsGameActive] = useState(false);\n  const [gameLength, setGameLength] = useState(11);\n  const randomColorNumber = Math.floor(Math.random() * COLORS.length);\n  const randomTextNumber = Math.floor(Math.random() * COLORS.length);\n  const [speed, setSpeed] = useState(2000);\n\n  useEffect(() => {\n    document.title = 'KrƒÅsu Spƒìle';\n  }, []);\n\n  // listens and records keypress\n  useEffect(() => {\n    window.addEventListener('keydown', (e: KeyboardEvent) => {\n      KEYPRESS.play();\n      const keyTransformer: { [key: string]: string } = {\n        s: 'r',\n        z: 'g',\n        r: 'p',\n        m: 'b',\n        d: 'y',\n        \n      \n       \n       \n      };\n      setKey(keyTransformer[e.key]);\n    });\n  }, []);\n\n  // listens for tick (ticking every 2 seconds)\n  useEffect(() => {\n    gameProgress();\n  }, [tick, isGameActive]);\n\n  const startGame = () => {\n    setIsGameActive(!isGameActive);\n  };\n\n  const resetGame = () => {\n    setTick(!tick);\n    setGameLength(11);\n    setCount(0);\n    setIsGameActive(true);\n    setTextToDisplay('');\n  };\n\n  const countPoints = () => {\n    const colorFirstChar = colorToDisplay![0];\n    if (key === colorFirstChar) {\n      setCount(count + 1);\n    } else if (key !== colorFirstChar && gameLength !== 11) {\n      ERROR.play();\n\n      toast.error('KrƒÅsa nav pareiza!', {\n        position: toast.POSITION.TOP_CENTER,\n        delay: 10,\n        autoClose: 1000,\n      });\n    }\n  };\n\n  const endGame = () => {\n    setTick(!tick);\n    setGameLength(11);\n    setCount(0);\n    setIsGameActive(false);\n    setTextToDisplay('');\n  };\n\n  const gameProgress = () => {\n    if (gameLength > 0 && isGameActive) {\n      countPoints();\n      setGameLength(gameLength - 1);\n      setKey('');\n      setColorToDisplay(COLORS[randomColorNumber].color);\n      setTextToDisplay(COLORS[randomTextNumber].text);\n\n      setTimeout(() => {\n        setTick(!tick);\n      }, speed);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.header}>KrƒÅsu Spƒìle</h1>\n      <div className={styles.gameBody}>\n        <Game\n          count={count}\n          textToDisplay={textToDisplay}\n          colorToDisplay={colorToDisplay}\n          gameLength={gameLength}\n        />\n        {isGameActive ? (\n          <>\n            <Button buttonClickHandler={endGame} label=\"Iziet\" />\n            <Button buttonClickHandler={resetGame} label=\"Mƒìƒ£inƒÅt vƒìlreiz\" />\n          </>\n        ) : (\n          <Button buttonClickHandler={startGame} label=\"SƒÅkt\" />\n        )}\n\n        {/* {<input\n          value={speed}\n          onChange={(e) => {\n            setSpeed(Number(e.target.value));\n            console.log(speed);\n          }}\n          type=\"range\"\n          id=\"speed\"\n          name=\"speed\"\n          min=\"500\"\n          max=\"4000\"\n        ></input>} */}\n      </div>\n    </div>\n  );\n};\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameWrapper\":\"Game_gameWrapper__1uBAR\",\"instructions\":\"Game_instructions__3eJwG\",\"instructionHeader\":\"Game_instructionHeader__1vepH\",\"instructionContent\":\"Game_instructionContent__3qjqI\",\"color\":\"Game_color__2H5DB\",\"pointCount\":\"Game_pointCount__1tP6k\",\"red\":\"Game_red__3EQkI\",\"black\":\"Game_black__21fVI\",\"pink\":\"Game_pink__H3F0z\",\"green\":\"Game_green__1OkgN\",\"yellow\":\"Game_yellow__2ZaR5\",\"button\":\"Game_button__9eUom\",\"luck\":\"Game_luck__SnFlj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__2L3DO\",\"container\":\"App_container__eSJ6i\",\"gameBody\":\"App_gameBody__xlTRX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__Nfhxt\",\"buttonExit\":\"Button_buttonExit__al_Ax\"};"],"sourceRoot":""}